from random import shuffle
import time
from turtle import *

# Variables globales
casillas = {}
vecinos = [
    (-100, 0),
    (100, 0),
    (0, -100),
    (0, 100),
]

tiempo_inicio = None
contador = 0
cronometro_activo = False

# Crear el objeto Turtle para mostrar el cronómetro
cronometro_turtle = Turtle()
cronometro_turtle.color("black")
cronometro_turtle.penup()
cronometro_turtle.hideturtle()
cronometro_turtle.goto(0, 300)

def iniciar_cronometro():
    global tiempo_inicio, cronometro_activo
    tiempo_inicio = time.time()
    cronometro_activo = True
    actualizar_cronometro()

def actualizar_cronometro():
    global cronometro_activo

    if not cronometro_activo:
        return

    tiempo_transcurrido = round(time.time() - tiempo_inicio, 2)
    cronometro_turtle.clear()
    cronometro_turtle.write(f"Tiempo: {tiempo_transcurrido} segundos", align="center", font=("Arial", 16, "normal"))
    ontimer(actualizar_cronometro, 100)  # Llamar a la función cada 100 milisegundos

def Inicio_Juego():
    rango = input("Digite el tamaño del puzzle (3, 4 o 5): ")
    if rango == '3':
        limite1_en_y = -100
        limite2_en_y = 200
        limite3_en_y = 100
        limite1_en_x = -100
        limite2_en_x = 200
        limite3_en_x = 100
        longitud_del_puzzle = 9
        Cargar_Tablero(limite1_en_y, limite2_en_y, limite3_en_y, limite1_en_x, limite2_en_x, limite3_en_x, longitud_del_puzzle)
    elif rango == '4':
        limite1_en_y = -200
        limite2_en_y = 200
        limite3_en_y = 100
        limite1_en_x = -200
        limite2_en_x = 200
        limite3_en_x = 100
        longitud_del_puzzle = 16
        Cargar_Tablero(limite1_en_y, limite2_en_y, limite3_en_y, limite1_en_x, limite2_en_x, limite3_en_x, longitud_del_puzzle)
    elif rango == '5':
        limite1_en_y = -300
        limite2_en_y = 200
        limite3_en_y = 100
        limite1_en_x = -300
        limite2_en_x = 200
        limite3_en_x = 100
        longitud_del_puzzle = 25
        Cargar_Tablero(limite1_en_y, limite2_en_y, limite3_en_y, limite1_en_x, limite2_en_x, limite3_en_x, longitud_del_puzzle)
        verificar_ganador(limite1_en_y, limite2_en_y, limite3_en_y, limite1_en_x, limite2_en_x, limite3_en_x)

def Cargar_Tablero(y1, y2, y3, x1, x2, x3, L):
    numeros = list(range(1, L))
    shuffle(numeros)
    numeros.append(None)

    index = 0
    for y in range(y2, y1, -y3):  # Modificar el rango para comenzar en y2 y decrementar en y3
        for x in range(x1, x2, x3):
            posicionamiento = (x, y)
            casillas[posicionamiento] = numeros[index]
            index += 1

    dibujar()
    setup(750, 750, 600, 0)
    hideturtle()
    tracer(False)
    onscreenclick(tap)
    iniciar_cronometro()
    done()

def cuadrado(posicionamiento, numero):
    up()
    goto(posicionamiento[0], posicionamiento[1])
    down()

    color('green', 'black')
    begin_fill()
    for count in range(4):
        forward(98)
        left(90)
    end_fill()

    if numero is None:
        return
    elif numero < 10:
        forward(20)

    write(numero, font=('Arial', 60, 'normal'))

def tap(x, y):
    global tiempo_inicio, contador, cronometro_activo

    if tiempo_inicio is None:
        tiempo_inicio = time.time()
        cronometro_activo = True

    contador += 1
    posicionamiento = None

    for casilla in casillas:
        if casilla[0] <= x <= casilla[0] + 100 and casilla[1] <= y <= casilla[1] + 100:
            posicionamiento = casilla
            break

    if posicionamiento is not None:
        for vecino in vecinos:
            posicion = (posicionamiento[0] + vecino[0], posicionamiento[1] + vecino[1])

            if posicion in casillas and casillas[posicion] is None:
                numero = casillas[posicionamiento]
                casillas[posicion] = numero
                casillas[posicionamiento] = None
                cuadrado(posicion, numero)
                cuadrado(posicionamiento, None)
                verificar_ganador()
                break

    if verificar_ganador():
        tiempo_transcurrido = round(time.time() - tiempo_inicio, 2)
        write(f"¡Ganaste!\nTiempo: {tiempo_transcurrido} segundos\nMovimientos: {contador}", align='center', font=('Arial', 20, 'normal'))
        exitonclick()

        print("GANASTE, TU TIEMPO ES:", tiempo_transcurrido)
        Guardar_Registro(tiempo_transcurrido)

def dibujar():
    for posicionamiento in casillas:
        cuadrado(posicionamiento, casillas[posicionamiento])

def verificar_ganador():
    global cronometro_activo

    numeros = list(casillas.values())  # Obtener los números de las casillas

    if numeros[-1] != None:
        return False  # La casilla vacía no está en la última posición

    numeros = numeros[:-1]  # Quitar la casilla vacía de la lista

    numeros_ordenados = sorted(numeros)  # Ordenar los números en forma ascendente

    if numeros != numeros_ordenados:
        return False  # Los números no están en orden ascendente

    cronometro_activo = False  # Detener el cronómetro
    return True

def Guardar_Registro(tiempo_transcurrido):
    respuesta = input("¿Deseas guardar el registro? (sí/no): ")
    nombre = input("Escribe tu nombre: ")

    try:
        with open("Registros.txt", "a") as archivo:
            archivo.write(f"{nombre},{tiempo_transcurrido}\n")
            archivo.close()
        print("Registros guardados correctamente.")
    except IOError:
        print("Error al guardar los registros.")

def mostrar_registros():
    try:
        with open("registros.txt", "r") as archivo:
            registros = archivo.readlines()
            registros = [registro.strip() for registro in registros]
            registros_completos = " | ".join(registros)
            print(registros_completos)
            archivo.close()  # Cerrar el archivo después de leerlo
    except IOError:
        print("Error al leer los registros.")

def Mostrar_R():
    Mejorespuntajes = input(print("Deseas ver los mejores puntajes(si/no?: "))
    if Mejorespuntajes.lower() == "si":
        mostrar_registros()
    else:
        Funcion_Principal()

def Funcion_Principal():
    print("-------------MENU-----------\n")
    print("1.JUGAR\n")
    print("2.MOSTRAR RECORDS\n")
    print("3.SALIR\n")
    opcion = int(input("ELIGE UNA OPCIÓN: "))
    if opcion == 1:
        Inicio_Juego()
        #iniciar_cronometro()
    elif opcion == 2:
        Mostrar_R()
    elif opcion == 3:
        exit()

Funcion_Principal()
